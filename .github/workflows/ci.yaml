name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
    - main
    paths:
    - site/content/**
    - terraform/**
    - helm/charts.yaml

permissions:
  id-token: write
  contents: read

jobs:
  test-content-scripts:
    name: test-content-scripts
    runs-on: ubuntu-latest
    concurrency: test-environment
    env:
      CLUSTER_ID: "ci-${{ github.run_id }}"
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Build environment image
      working-directory: environment
      run: |
        docker build -t eks-workshop-environment .
    - name: Build test image
      working-directory: test
      run: |
        docker build -t eks-workshop-test .
    - name: Get AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.6.1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 3600
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: GithubActionsSession
    - name: Set cluster ID
      run: echo "TF_VAR_cluster_id=${CLUSTER_ID}" >> $GITHUB_ENV
    - name: Create infrastructure
      timeout-minutes: 30
      working-directory: test/terraform
      run: |
        terraform init -backend-config="bucket=${{ secrets.TFSTATE_BUCKET }}" -backend-config="key=ci/${CLUSTER_ID}/terraform.tfstate"
        terraform apply --auto-approve
    - name: Refresh AWS credentials
      if: always()
      uses: aws-actions/configure-aws-credentials@v1.6.1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 3600
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: GithubActionsSession
    - name: Run tests
      timeout-minutes: 60
      run: |
        DEV_MODE=1 make test
    - name: Refresh AWS credentials
      if: always()
      uses: aws-actions/configure-aws-credentials@v1.6.1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 3600
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: GithubActionsSession
    - name: Cleanup environment
      if: always()
      timeout-minutes: 20
      working-directory: test/terraform
      run: |
        terraform destroy --auto-approve
  verify-helm-charts:
    name: verify-helm-charts
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Verify helm chart yaml
      run: |
        make verify-helm-metadata